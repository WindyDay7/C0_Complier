Begin lexical analysis
const_sy  const
int_sy  int
ident num
endow  =
un_intcon  33
comma  ,
ident number1
endow  =
un_intcon  35
comma  ,
ident number2
endow  =
un_intcon  36
comma  ,
ident number6
endow  =
un_intcon  0
semicolon  ;
const_sy  const
char_sy  char
ident str
endow  =
charcon  1
comma  ,
ident str1
endow  =
charcon  a
comma  ,
ident str2
endow  =
charcon  e
comma  ,
ident str3
endow  =
charcon  9
comma  ,
ident str4
endow  =
charcon  +
comma  ,
ident str5
endow  =
charcon  *
semicolon  ;
int_sy  int
ident i
semicolon  ;
int_sy  int
ident letter_only
comma  ,
ident number3
comma  ,
ident number4
l_bracket  [
un_intcon  100
r_bracket  ]
semicolon  ;
char_sy  char
ident only_letter
comma  ,
ident str6
comma  ,
ident str7
l_bracket  [
un_intcon  200
r_bracket  ]
comma  ,
ident cal
l_bracket  [
un_intcon  100
r_bracket  ]
comma  ,
ident temp_cal
semicolon  ;
char_sy  char
ident function2
l_parentheses  (
char_sy  char
ident function2
l_parentheses  (
int_sy  int
ident parameter3
comma  ,
char_sy  char
ident parameter4
r_parentheses  )
l_brace  {
int_sy  int
ident temp_num
comma  ,
ident i
comma  ,
ident temp_num_2
semicolon  ;
char_sy  char
ident temp_str
semicolon  ;
if_sy  if
l_parentheses  (
ident parameter4
minus  -
un_intcon  0
ble  <=
charcon  Z
minus  -
un_intcon  0
r_parentheses  )
l_brace  {
printf_sy  printf
l_parentheses  (
stringcon  Too small
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
return_sy  return
l_parentheses  (
charcon  s
r_parentheses  )
semicolon  ;
r_brace  }
else_sy  else
l_brace  {
ident temp_num_2
endow  =
ident parameter4
minus  -
un_intcon  0
semicolon  ;
do_sy  do
l_brace  {
ident temp_num_2
endow  =
ident temp_num_2
minus  -
un_intcon  1
semicolon  ;
if_sy  if
l_parentheses  (
ident temp_num_2
beq  ==
un_intcon  111
r_parentheses  )
l_brace  {
printf_sy  printf
l_parentheses  (
stringcon  The current character is:
comma  ,
charcon  o
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
r_brace  }
r_brace  }
while_sy  while
l_parentheses  (
ident temp_num_2
bne  !=
un_intcon  97
r_parentheses  )
r_brace  }
for_sy  for
l_parentheses  (
ident i
endow  =
ident parameter3
semicolon  ;
ident i
bgt  >
un_intcon  97
semicolon  ;
ident i
endow  =
ident i
minus  -
un_intcon  1
r_parentheses  )
for_sy  for
l_parentheses  (
ident i
endow  =
ident parameter3
semicolon  ;
ident i
bgt  >
un_intcon  97
semicolon  ;
ident i
endow  =
ident i
minus  -
un_intcon  1
r_parentheses  )
l_brace  {
if_sy  if
l_parentheses  (
ident parameter3
bge  >=
un_intcon  200
r_parentheses  )
l_brace  {
ident i
endow  =
un_intcon  96
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  i is Bigger than 200\\n
r_parentheses  )
semicolon  ;
r_brace  }
r_brace  }
return_sy  return
l_parentheses  (
charcon  r
r_parentheses  )
semicolon  ;
r_brace  }
void_sy  void
ident function3
l_parentheses  (
r_parentheses  )
l_brace  {
int_sy  int
ident temp_num1
comma  ,
ident temp_num2
comma  ,
ident i
semicolon  ;
char_sy  char
ident temp_str
comma  ,
ident result_str
semicolon  ;
ident temp_str
endow  =
charcon  H
semicolon  ;
ident temp_num1
endow  =
un_intcon  300
semicolon  ;
ident result_str
endow  =
ident function2
l_parentheses  (
ident temp_num1
comma  ,
ident temp_str
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
ident result_str
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
ident str7
l_bracket  [
ident temp_str
minus  -
un_intcon  1
r_bracket  ]
endow  =
ident result_str
semicolon  ;
ident temp_str
endow  =
charcon  b
semicolon  ;
ident result_str
endow  =
ident function2
l_parentheses  (
ident temp_num1
minus  -
un_intcon  100
comma  ,
ident temp_str
r_parentheses  )
semicolon  ;
ident str7
l_bracket  [
ident temp_str
minus  -
un_intcon  1
r_bracket  ]
endow  =
ident result_str
semicolon  ;
ident temp_str
endow  =
charcon  w
semicolon  ;
ident result_str
endow  =
ident function2
l_parentheses  (
ident temp_num1
minus  -
un_intcon  200
plus  +
un_intcon  100
comma  ,
ident temp_str
r_parentheses  )
semicolon  ;
ident str7
l_bracket  [
ident temp_str
minus  -
un_intcon  1
r_bracket  ]
endow  =
ident result_str
semicolon  ;
ident number4
l_bracket  [
un_intcon  90
r_bracket  ]
endow  =
un_intcon  15
semicolon  ;
ident number4
l_bracket  [
un_intcon  98
r_bracket  ]
endow  =
un_intcon  17
semicolon  ;
ident number4
l_bracket  [
un_intcon  99
r_bracket  ]
endow  =
un_intcon  17
semicolon  ;
return_sy  return
semicolon  ;
r_brace  }
void_sy  void
ident easy_cal
l_parentheses  (
int_sy  int
ident a1
comma  ,
int_sy  int
ident a2
comma  ,
int_sy  int
ident a3
comma  ,
int_sy  int
ident a4
comma  ,
int_sy  int
ident a5
comma  ,
int_sy  int
ident a6
comma  ,
int_sy  int
ident a7
comma  ,
int_sy  int
ident a8
comma  ,
int_sy  int
ident a9
comma  ,
int_sy  int
ident a10
comma  ,
int_sy  int
ident a11
comma  ,
int_sy  int
ident a12
r_parentheses  )
l_brace  {
int_sy  int
ident result_1
comma  ,
ident result_2
semicolon  ;
ident result_1
endow  =
ident a1
plus  +
ident a2
plus  +
ident a3
plus  +
ident a4
plus  +
ident a5
plus  +
ident a6
plus  +
ident a7
plus  +
ident a8
plus  +
ident a9
plus  +
ident a10
plus  +
ident a11
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  result_1 is:
comma  ,
ident result_1
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
ident a11
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
ident a12
r_parentheses  )
semicolon  ;
ident result_2
endow  =
ident a9
plus  +
ident a11
plus  +
ident a12
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
ident result_1
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
ident result_2
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
ident result_1
plus  +
ident result_2
r_parentheses  )
semicolon  ;
printf_sy  printf
l_parentheses  (
stringcon  \\n
r_parentheses  )
semicolon  ;
r_brace  }
void_sy  void
main_sy  main
l_parentheses  (
r_parentheses  )
l_brace  {
const_sy  const
int_sy  int
ident constant1
endow  =
un_intcon  12
comma  ,
ident constant2
endow  =
un_intcon  13
semicolon  ;
const_sy  const
char_sy  char
ident constant3
endow  =
charcon  f
comma  ,
ident constant4
endow  =
charcon  w
semicolon  ;
int_sy  int
ident in_num
comma  ,
ident out_num
comma  ,
ident i
semicolon  ;
char_sy  char
ident in_str
comma  ,
ident out_str
semicolon  ;
ident out_num
endow  =
ident constant1
plus  +
minus  -
semicolon  ;
scanf_sy  scanf
l_parentheses  (
ident in_num
r_parentheses  )
semicolon  ;
ident function3
l_parentheses  (
r_parentheses  )
semicolon  ;
ident easy_cal
l_parentheses  (
un_intcon  1
comma  ,
un_intcon  1
comma  ,
un_intcon  3
comma  ,
un_intcon  3
comma  ,
un_intcon  4
comma  ,
un_intcon  5
comma  ,
un_intcon  6
comma  ,
un_intcon  75
comma  ,
un_intcon  6
comma  ,
un_intcon  7
comma  ,
un_intcon  8
comma  ,
un_intcon  4
comma  ,
un_intcon  7
comma  ,
semicolon  ;
r_brace  }
