const int num = 33, number1 = 35, number2 = 36, number6 = 0;
const char str = '1', str1 = 'a', str2 = 'e', str3 = '9', str4 = '+', str5 = '*';
int i;
int letter_only, number3, number4[100];
char only_letter, str6, str7[200], cal[100], temp_cal;

int function1(int parameter1)
{
	return (parameter1 +1);
}

int function_cal()
{
	int i;
	int cal_num1, cal_flag, cal_num3, cal_num, cal_result;
	char temp_in;
	cal_num1 = 0;
	cal_flag = 0;
	cal_result = 0;

	for (i = 0; i < 10; i = i + 1) {
		scanf(temp_in);
		cal[i] = temp_in;
	}
	for (i = 0; i < 10; i = i + 1)
	{
		cal_num1 = 0;
		do
		{
			temp_cal = cal[i];
			if (temp_cal >= '0') {
				cal_num = temp_cal - '0';
				cal_num1 = 10 * cal_num1 + cal_num;
				i = i + 1;
			}
		}
		while (temp_cal >= '0')
		cal_flag = cal_flag + 1;
		if (cal_flag == 1)
			cal_result = cal_result + cal_num1;
		else
		{
			if (temp_cal == str4)
				cal_result = cal_result + cal_num1;
			else
				cal_result = cal_result + cal_num1;
		}
	}
	return (cal_result);
}

void Complex_Compute()
{
	int a, b, c, d, e, f, g;
	int x, y;
	int result_1, result_2, result_3, result_4;
	a = +1; b = number1; c = number2; d = number2 - num;
	e = b + c - d;
	f = c + a - d;
	printf("\n a is", a);
	printf("\n b is", b);
	printf("\n c is", c);
	printf("\n d is", d);
	printf("\n e is", e);
	printf("\n f is", f);
	printf("\n g is", g);
	x = 'x';
	y = 'y';
	printf("\n");
	result_1 = number4[99] * a + function1(5) * b;
	result_2 = function_cal();
	printf("\n");
	printf("Calculate the result_2 is: ", result_2);
	return ;
}

void main()
{
	const int constant1 = 12, constant2 = 13;
	const char constant3 = 'f', constant4 = 'w';
	int in_num, out_num, i;
	char in_str, out_str;
	out_num = constant1 + constant2;
	Complex_Compute();
	return ;
}
